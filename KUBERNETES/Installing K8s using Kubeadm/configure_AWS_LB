# --------------------------------------------
# Configuring AWS Load balancer with Kubeadm
# --------------------------------------------

# Ref: https://github.com/kubernetes-sigs/aws-load-balancer-controller/tree/main

# Create IAM policy
aws iam create-policy \
  --policy-name AWSLoadBalancerControllerIAMPolicy \
  --policy-document https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/main/docs/install/iam_policy.json


# Create trust policy
vi trust-policy.json
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Principal": {
        "Service": "ec2.amazonaws.com"
      },
      "Action": "sts:AssumeRole"
    }
  ]
}

# Create custom policy using below
# Ref: https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/main/docs/install/iam_policy.json

# Create IAM Role (with trust relationship)
aws iam create-role --role-name my-k8s-role --assume-role-policy-document file://trust-policy.json

# Attach policy to IAM role
aws iam attach-role-policy --role-name my-k8s-role --policy-arn arn:aws:iam::<AWS-Account-ID>:policy/AWSLoadBalancerControllerIAMPolicy

# Update the Master & Node with the IAM Role
Go to the EC2 Console --> Select the instance --> Click Actions > Security > Modify IAM Role.
Select the IAM role you created and click Update IAM Role.

# Create a Kubernetes Service Account
kubectl create namespace kube-system
# kubectl create serviceaccount aws-load-balancer-controller -n kube-system

kubectl annotate serviceaccount aws-load-balancer-controller -n kube-system \
  eks.amazonaws.com/role-arn=arn:aws:iam::<AWS-Account-ID>:role/EC2-K8s-Role

# Deploy the Custom Resource Definitions
# AWS Load Balancer Controller requires specific CRDs to function properly
kubectl apply -f https://github.com/kubernetes-sigs/aws-load-balancer-controller/releases/download/v2.5.3/v2_5_3_full.yaml

# Deploy the AWS Load Balancer Controller
wget https://github.com/kubernetes-sigs/aws-load-balancer-controller/releases/download/v2.5.3/v2_5_3_controller.yaml -O aws-load-balancer-controller.yaml

# Edit the manifest & add cluster-name
vi aws-load-balancer-controller.yaml
# - --cluster-name=<your-cluster-name>

# If using IRSA, ensure the service account name is correctly set:
serviceAccountName: aws-load-balancer-controller

# Apply the manifest
kubectl apply -f aws-load-balancer-controller.yaml

# Check if the AWS Load Balancer Controller is running
kubectl get pods -n kube-system -l app.kubernetes.io/name=aws-load-balancer-controller
# controller pod should be in the Running state

# Create & Apply the service manifest & see if the load balancer is provisioned
