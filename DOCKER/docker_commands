# ===================
# DOCKER COMMANDS
# ===================

# ----------------------
# Docker image commands
# ----------------------
docker pull <image>                           #(pulls image from 'Dockerhub')
docker images                                 #(shows list of images)
docker build -t <image> .                     #(to create image from 'Dockerfile')
docker tag <old-name> <new name>              #(to rename an image)
docker commit <container> <new-image>:<tag>   #(create image from container)
docker rmi <image name>                       #(to delete an image)
docker rmi -f $(docker images -q)             #(to delete all the images)
docker image prune -af                        #(to delete all unused/dangling images; a: all; f: forcefully)

# --------------------------
# Docker container commands
# --------------------------
docker run –it <image-name>                   #(create container from image)
docker ps –a                                  #(shows list of all containers)
docker rename <old-name> <new-name>           #(to rename container)
docker start/stop <container-name>            #(start or stop container)
docker restart <container-name>               #(restart a container)
docker stop $(docker ps -a -q)                #(to stop all the running containers)

docker attach <container-name>                #(to enter inside container)
OR
docker exec –it <container-name> /bin/bash    #(alternate command to go inside container; it: interactive terminal)

docker rm <container-name>                    #(remove/delete a stopped container)
docker kill <container_name>                  #(remove/delete stopped or running container forcefully)
docker rm -f $(docker ps -a)                  #(remove all containers running/stopped forcefully)

docker container prune -f                     #(to delete stopped containers)
docker inspect <container-name>               #(to get details of particular container)
docker diff <container-name>                  #(shows container logs; A=added; D=deleted; C=changed)

# ---------------------------------
# Create image from your container
# ---------------------------------
docker pull ubuntu:22.04                              # pull ubuntu base image
docker run –it –name my-container ubuntu:22.04        # create container from image
apt update && apt install -y apache2 git              # install git & apache
git clone https://github.com/pandacloud1/webapp4.git  # clone webapp files from Github
cp -R webapp4/* /var/www/html/                        # copy files to html folder
exit					
docker ps –a                                          # see list of containers
docker commit my-container my-webapp4                 # create image from container
docker images                                         # see list of images
docker run –it –p 80:80 my-webapp4                    # create container from custom image
service apache2 start                                 # start the apache service

# ---------------------------------
# Push image to Dockerhub
# ---------------------------------
docker login                                            # enter Dockerhub username & password
docker tag my-webapp4:latest pandacloud/my-repo:latest  # rename the image to standard format
docker push pandacloud/my-repo:latest                   # push the image to Dockerhub; login to Dockerhub & see your image

# --------------------------------------
# Use host machine volume for container
# --------------------------------------
docker pull ubuntu                                      # pull image
docker run –d –name container1 ubuntu                   # create a container
docker volume create myvolume                           # creates a volume
docker volume ls                                        # lists the volumes
docker run -it -v myvolume:/data container1             # use host machine volume  container
cd data				                                          # go to the ‘data’ directory
touch file{1..10}			                                  # create files in the container
exit				                                            # exit from container
docker volume inspect myvolume                          # see path in base machine
cd /var/lib/docker/volumes/myvolume/_data               # go to the path in above command
ls				                                              # the container files will be found here 
docker volume rm my volume		# to delete the volume	

